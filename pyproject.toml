[project]
name = "wenxin-openai-proxy"
version = "1.0.0"
description = "Wenxin Service Proxy, convert OpenAI official API request to Wenxin API request, support chat completion and list models."
authors = [
    { name = "XingKaiXin", email = "xingkaixin@gmail.com" }
]
dependencies = ["pydantic~=1.10.7", "pyyaml~=6.0", "fastapi~=0.95.1", "sse-starlette~=1.3.4", "httpx~=0.24.0", "uvicorn[standard]~=0.21.1", "gunicorn~=20.1.0"]
readme = "README.md"
requires-python = ">= 3.8"
license = { text = "MIT" }

[tool.rye.scripts]
dev = "uvicorn main:app --reload --host 0.0.0.0 --port 8000"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["isort~=6.0.0b2", "flake8-pyproject~=1.2.3"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.flake8]
max-line-length = 120
exclude = "**/__init__.py"

[tool.pylint.messages_control]
disable = "invalid-name, redefined-outer-name, missing-module-docstring, missing-function-docstring, missing-class-docstring, W0703"
logging-format-style = "percent"

[tool.pylint.design]
min-public-methods = 0

[tool.pylint.format]
max-line-length = 120
indent-string = '    '
single-quotes = true

[tool.pylint.extensions]
extension-pkg-allow-list = ["pydantic"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88